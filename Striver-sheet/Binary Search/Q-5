//Finding Square root with more precision

#include<iostream>
using namespace std;

int findRoot(int n){
    int l=1,h=n,ans=-1;
    while(l<=h){
        int m = l+(h-l)/2;
        if(m*m==n) return m;
        else if(m*m<n) {
            ans = m;
            l = m+1;
        }
        else h = m-1;
    }
    return ans;
}

double morePrecise(int root,int n,int p){
    double x = 1,ans = double(root);
    for(int i=1;i<=p;i++){
        x = x*0.1;
        double t = ans+x;
        while(t*t<n){
            ans = t;
            t+=x;
        }
    }
    return ans;
}

int main(){
    int n;
    cout<<"Enter a number: ";
    cin>>n;
    int root = findRoot(n);
    cout<<"Answer is: "<<root<<endl;
    cout<<"More Precise answer is: "<<morePrecise(root,n,3);
    return 0;
}
