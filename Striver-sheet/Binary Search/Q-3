//GFG: Search an element in sorted and rotated array
//https://practice.geeksforgeeks.org/problems/search-in-a-rotated-array0959/1

int bSearch(vector<int>v,int s,int e,int k){
    while(s<=e){
        int m=s+(e-s)/2;
        if(v[m]==k) return m;
        else if(v[m]>k) e=m-1;
        else s=m+1;
    }
    return -1;
}
int findPivot(vector<int>v){
    int s=0,e=v.size()-1;
    while(s<e){
        int m = s+(e-s)/2;
        if(v[m]>=v[0]) s=m+1;
        else e=m;
    }
    return s;
}
int Search(vector<int> vec, int k) {
    //code here
    int p = findPivot(vec),n=vec.size();
    if(k == vec[p]) return p;
    if(k>vec[n-1]) return bSearch(vec,0,p-1,k);
    return bSearch(vec,p,n-1,k);
}

------------------OR-------------------
int Search(vector<int> a, int K) {
   int low = 0;
   int high = a.size()-1;
   while(low<=high){
       int mid = (high-low)/2 + low;
       if(a[mid]==K)
       return mid;
       if(a[low]<a[mid]){
           if(a[mid]>K && a[low]<=K)
           high = mid-1;
           else
           low = mid+1;
       }
       else{
           if(a[mid]<K && a[high]>=K)
           low = mid+1;
           else
           high = mid-1;
       }
      
   }
    return -1;
}
