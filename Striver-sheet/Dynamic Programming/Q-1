//GFG: Count ways to reach the n'th stair
//https://www.geeksforgeeks.org/problems/count-ways-to-reach-the-nth-stair-1587115620/1

1. RC + Memoization (Top Down Dp) :
class Solution
{
    public:
    int mod = 10e9+7;

    //Function to count number of ways to reach the nth stair.
    int f(int n,vector<int>&dp)  
    {
        if(n<=1) return 1;
        if(dp[n]!=-1) return dp[n]%mod;
        return dp[n]=f(n-1,dp)%mod+f(n-2,dp)%mod;
    }

    int countWays(int n)
    {
        // your code here
        vector<int>dp(n+1,-1);
        return f(n,dp);
    }
};
 

 

2. Tabulation (Bottom Up DP) :
class Solution
{
    public:
    int mod = 1e9+7;
    
    int countWays(int n)
    {
        int dp[n];
        
        dp[0] = 1;
        dp[1] = 1;
        
        for(int i=2;i<=n;i++){
            dp[i] = (dp[i-1] % mod + dp[i-2] % mod) % mod;
        }
        return dp[n];
    }
};
 

3. Space Optimized (Iterative Approach) : 

class Solution
{
    public:
    int mod = 1e9+7;
    
    int countWays(int n)
    {
        int prev2 = 1;
        int prev = 1;
        
        for(int i=2;i<=n;i++){
            int curr = (prev % mod + prev2 % mod) % mod;
            
            prev2 = prev;
            prev = curr;
        }
        return prev;
    }
};
