//GFG: Reverse a Linked List in groups of given size.
//https://practice.geeksforgeeks.org/problems/reverse-a-linked-list-in-groups-of-given-size/1

struct node *reverse (struct node *head, int k)
    { 
        // Complete this method
        if(!head || !head->next) return head;
        node* temp=NULL, *h=NULL,*p=NULL,*q=head,*r=head->next;
        int flag=0;
        while(q){
            node* t=temp;
            temp=q;
            for(int i=0;i<k && q;i++){
                q->next=p;
                p=q;
                q=r;
                if(r) r = r->next;;
            }
            if(t) t->next = p;
            if(flag==0){
                h = p;
                flag = 1;
            }
            temp->next = q;
            // cout<<h->data<<" "<<h->next->data<<endl;
        }
        return h;
    }


----------OR-------------
    struct node* reverseLL(node* head){
        node*p=NULL,*q=head,*r=head->next;
        while(q){
            q->next = p;
            p = q;
            q = r;
            if(r) r = r->next;
        }
        return p;
    }
    struct node *reverse (struct node *head, int k)
    { 
        // Complete this method
        node*t = NULL,*a=head,*b=head,*r=head;
        while(r){
            for(int i=0;r && i<k;i++){
                b = r;
                r = r->next;
            }
            b->next = NULL;
            a = reverseLL(a);
            if(t) t->next = a;
            else head = a;
            while(a->next) a = a->next;
            a->next = r;
            t = a;
            a = b = r;
        }
        return head;
    }

--------------------OR--------------------------
    struct node* reverseLL(node* head){
        node*p=NULL,*q=head,*r=head->next;
        while(q){
            q->next = p;
            p = q;
            q = r;
            if(r) r = r->next;
        }
        return p;
    }
    struct node *reverseIt (struct node *head, int k)
    { 
        // Complete this method
        node*a=NULL,*d=head,*c;
        while(d){
            node* b = d;
            for(int i=0;i<k && d;i++){
                c = d;
                d = d->next;
            }
            c->next = NULL;
            if(a) a->next = reverseLL(b);
            else head = reverseLL(b);
            b->next = d;
            a = b;
        }
        return head;
    }
