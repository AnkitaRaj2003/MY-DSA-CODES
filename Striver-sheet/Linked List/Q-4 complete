//GFG: Merge two sorted linked list
//https://practice.geeksforgeeks.org/problems/merge-two-sorted-linked-lists/1

***BRUTE FORCE: Taking external space
Node* sortedMerge(Node* h1, Node* h2)  
{  
    // code here
    struct Node* temp=NULL,*t=NULL,*head=NULL,*t1 = h1,*t2 = h2;
    while(t1 && t2){
        if((t1->data)>(t2->data)){
            temp = new Node(t2->data);
            t2 = t2->next;
        }
        else{
            temp = new Node(t1->data);
            t1 = t1->next;
        }
        if(!t) head = t = temp;
        else{
            t->next = temp;
            t = temp;
        }
    }
    while(t1){
        temp = new Node(t1->data);
        t1 = t1->next;
        t->next = temp;
        t = temp;
    }
    while(t2){
        temp = new Node(t2->data);
        t2 = t2->next;
        t->next = temp;
        t = temp;
    }
    return head;
}  

----------OR---------
***NO EXTRA SPACE
Node* sortedMerge(Node* head1, Node* head2)  
{  
    // code here
    Node*p = head1,*q = head2,*a = NULL,*b = NULL;
    while(p && q){
        if(p->data>q->data){
            while(q && p->data>q->data){
                b = q;
                q = q->next;
            }
            if(a) a->next = head2;
            else head1 = head2;
            b->next = p;
            head2 = q;
            b = NULL;
        }
        a = p;
        p = p->next;
    }
    if(head2) a->next = head2;
    return head1;
} 
