//GFG: Implement a Queue using two stack s1 and s2.
//https://practice.geeksforgeeks.org/problems/queue-using-stack/1

class Queue {
stack<int> input, output;
public:

    void enqueue(int x) {
        input.push(x);
    }

    int dequeue() {
        int x;
        if(output.empty()){
            if(input.empty()) return -1;
            while(!input.empty()){
                output.push(input.top());
                input.pop();
            }
        }
        x = output.top();
        output.pop();
        return x;
    }
};


//Leetcode: https://leetcode.com/problems/implement-queue-using-stacks/submissions/

class MyQueue {
    stack<int> s1,s2;
public:
    MyQueue() {
    }
    
    void push(int x) {
        s1.push(x);
    }
    
    int pop() {
        peek();
        int x = s2.top();
        s2.pop();
        return x;
    }
    
    int peek() {
        if(s2.empty()){
            if(s1.empty()) return -1;
            while(!s1.empty()){
                s2.push(s1.top());
                s1.pop();
            }
        }
        int x = s2.top();
        return x;
    }
    
    bool empty() {
        if(s1.empty() && s2.empty()) return true;
        return false;
    }
