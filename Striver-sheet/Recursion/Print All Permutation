//GFG: https://www.geeksforgeeks.org/problems/all-unique-permutations-of-an-array/0

-----------------------------------METHOD I------------------------------------
    void f(vector<int>a,vector<int>&temp,set<vector<int>>&ans,int freq[]){
        if(temp.size()==a.size()){
            ans.insert(temp);
            return;
        }
        for(int i=0;i<a.size();i++){
            if(!freq[i]){
                freq[i]=1;
                temp.push_back(a[i]);
                f(a,temp,ans,freq);
                freq[i]=0;
                temp.pop_back();
            }
        }
    }
    vector<vector<int>> uniquePerms(vector<int> &arr ,int n) {
        // code here
        set<vector<int>>ans;
        vector<int>temp;
        int freq[arr.size()]={0};
        f(arr,temp,ans,freq);
        vector<vector<int>>v;
        for(auto x: ans) v.push_back(x);
        return v;
    }

--------------------------METHOD II---------------------------------------
    void f(int i,vector<int>a,set<vector<int>>&ans){
        if(i==a.size()){
            ans.insert(a);
            return;
        }
        for(int j=i;j<a.size();j++){
            swap(a[i],a[j]);
            f(i+1,a,ans);
            swap(a[i],a[j]);
        }
    }
    vector<vector<int>> uniquePerms(vector<int> &arr ,int n) {
        // code here
        set<vector<int>>ans;
        f(0,arr,ans);
        vector<vector<int>>v;
        for(auto x:ans) v.push_back(x);
        return v;
    }
