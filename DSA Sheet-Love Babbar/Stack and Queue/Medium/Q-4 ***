//GFG: Stack Permutations
//https://practice.geeksforgeeks.org/problems/stack-permutations/1?page=1&difficulty[]=1&category[]=Stack&category[]=Queue&curated[]=1&curated[]=8&curated[]=7&sortBy=submissions

int isStackPermutation(int N,vector<int> &A,vector<int> &B){
        stack<int> st;
        int i=0,j=0;
        vector<int> C;
        while(i<N){
                if(A[i]!=B[j]) st.push(A[i++]);
                else{
                    st.push(A[i++]);
                    while(!st.empty() && st.top()==B[j]){
                        C.push_back(st.top());
                        st.pop();
                        j++;
                    }
                }
        }
        if(st.empty()) return 1;
        return 0;
    }
    
    ---------OR---------
    int isStackPermutation(int N,vector<int> &A,vector<int> &B){
        stack<int> st;
        int i=0,j=0;
        vector<int> C;
        while(i<N){
            if(st.empty()) st.push(A[i++]);
            else{
                if(st.top()!=B[j]) st.push(A[i++]);
                else{
                    while(!st.empty() && st.top()==B[j]){
                        C.push_back(st.top());
                        st.pop();
                        j++;
                    }
                }
            }
        }
        while(!st.empty() && st.top()==B[j]){
            C.push_back(st.top());
            st.pop();
            j++;
        }
        if(st.empty()) return 1;
        return 0;
    }
