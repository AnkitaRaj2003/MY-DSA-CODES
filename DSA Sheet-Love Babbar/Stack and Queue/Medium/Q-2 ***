//GFG: The Celebrity Problem
//https://practice.geeksforgeeks.org/problems/the-celebrity-problem/1?page=1&difficulty[]=1&category[]=Stack&category[]=Queue&curated[]=1&curated[]=8&curated[]=7&sortBy=submissions

//Simple iterative solution - O(N2)
//Function to find if there is a celebrity in the party or not.
    int celebrity(vector<vector<int> >& M, int n) 
    {
        // code here 
        //Check Row wise - all elements are 0(celebrity knows no one), and Column wise all elements are 1(all knows the celebrity) except when i = j.
        for(int i=0;i<n;i++){
            int flag = 0;
            for(int j=0;j<n;j++){
                if(i==j) continue;
                if(M[j][i]==0){
                    flag = 1;
                    break;
                }
            }
            if(flag!=1){
                flag = 2;
                for(int j=0;j<n;j++){
                    if(i==j) continue;
                    if(M[i][j]==1){
                        flag = 0;
                        break;
                    }
                }
            }
            if(flag == 2) return i;
        }
        return -1;
    }
    
//Using Stack
//Function to find if there is a celebrity in the party or not.
    int celebrity(vector<vector<int> >& M, int n) 
    {
        // code here 
        stack<int> st;
        for(int i=0;i<n;i++) st.push(i);
        while(st.size()!=1){
            int a = st.top();
            st.pop();
            int b = st.top();
            st.pop();
            if(M[a][b] == 1) st.push(b);
            else st.push(a);
        }
        if(st.empty()) return -1;
        int i=st.top();
        st.pop();
        int flag = 0;
        for(int j=0;j<n;j++){
            if(i==j) continue;
            else if(M[i][j]==1 || M[j][i]==0){
                flag = 1;
                break;
            }
        }
        if(flag == 0) return i;
        return -1;
    }
