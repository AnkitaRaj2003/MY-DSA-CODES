//GFG: Finding middle element in a linked list
//https://practice.geeksforgeeks.org/problems/finding-middle-element-in-a-linked-list/1?page=1&difficulty[]=-2&difficulty[]=-1&difficulty[]=0&category[]=Linked%20List&curated[]=1&curated[]=8&curated[]=7&sortBy=submissions


/* Should return data of middle node. If linked list is empty, then  -1*/
    int getMiddle(Node *head)
    {
        // Your code here
        if(!head) return -1;
        int count = 0;
        Node* t = head;
        while(t){
            count++;
            t = t->next;
        }
        t = head;
        int x = count/2+1;
        for(int i=1;i<x;i++) t = t->next;
        return t->data;
    }
 
-------  OR  --------

int getMiddle(Node *head)
    {
        // Your code here
        Node *slow=head;
        Node *fast=head;
        while(fast!=NULL && fast->next!=NULL)
        {
            slow=slow->next;
            fast=fast->next->next;
        }
        return slow->data;
    }
