//GFG: Geek jump
//https://practice.geeksforgeeks.org/problems/geek-jump/1

    int minimumEnergy(vector<int>& height, int n) {
        // Code here
        // if(n==1) return 0;
        // if(m[n-1]==0) m[n-1] = minimumEnergy(height,n-1);
        // int left = abs(height[n-1]-height[n-2])+m[n-1];
        // int right=INT_MAX;
        // if(n>2){
        //     if(m[n-2]==0) m[n-2] = minimumEnergy(height,n-2);
        //     right = abs(height[n-1]-height[n-3])+m[n-2];
        // }
        // return min(right,left);
        
        vector<int> v(n,-1);
        v[0] = 0;
        for(int i=1;i<n;i++){
            int left = v[i-1]+abs(height[i]-height[i-1]);
            int right = INT_MAX;
            if(i>1) right = v[i-2]+abs(height[i]-height[i-2]);
            v[i] = min(right,left);
        }
        return v[n-1];
    }
