//SYMMETRIC MATRIX
//Here, i have created it using uppper triangular matrix we can also do it by using lower triangular matrix.

#include <iostream>
using namespace std;
class symmetrix_matrix
{
    int n, *A;

public:
    symmetrix_matrix()
    {
        this->n = 10;
        A = new int[n*(n+1)/2];
    }
    symmetrix_matrix(int n)
    {
        this->n = n;
        A = new int[n*(n+1)/2];
        // A = {0};
    }
    void set(int i, int j, int x)
    {
        if (i <= j)
            A[j*(j-1)/2+i-1] = x;
        else A[i*(i-1)/2+j-1] = x;
    }
    int get(int i, int j)
    {
        if (i <= j)
            return A[j*(j-1)/2+i-1];
        return A[i*(i-1)/2+j-1];
    }
    void display()
    {
        for (int i = 1; i <= n; i++)
        {
            for (int j = 1; j <= n; j++)
            {
                if (i <= j)
                    cout << A[j*(j-1)/2+i-1] << " ";
                else
                    cout << A[i*(i-1)/2+j-1] << " ";
            }
            cout << endl;
        }
    }
    ~symmetrix_matrix()
    {
        delete[] A;
    }
};

int main()
{
    int d;
    cout << "Enter Dimensions: ";
    cin >> d;

    symmetrix_matrix dm(d);

    int x;
    cout << "Enter All Elements: "<<endl;;
    for (int i = 1; i <= d; i++)
    {
        for (int j = 1; j <= d; j++)
        {
            cout<<"Element at index ["<<i<<","<<j<<"]: ";
            cin >> x;
            dm.set(i, j, x);
        }
    }

    dm.display();
    return 0;
}
