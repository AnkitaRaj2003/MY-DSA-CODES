//Toeplitz matrix
//Storing column 1 first then row 1

#include <iostream>
using namespace std;
class toeplitz_matrix
{
    int n, *A;

public:
    toeplitz_matrix()
    {
        this->n = 10;
        A = new int[2 * n - 1];
    }
    toeplitz_matrix(int n)
    {
        this->n = n;
        A = new int[n * 2 - 1];
    }
    void set(int i, int j, int x)
    {
        if (i >= j)
            A[i - j] = x;
        else
            A[n + j - i - 1] = x;
    }
    int get(int i, int j)
    {
        if (i >= j)
            return A[i - j];
        else
            return A[n + j - i - 1];
    }
    void display()
    {
        for (int i = 1; i <= n; i++)
        {
            for (int j = 1; j <= n; j++)
            {
                if (i >= j)
                    cout << A[i - j] << " ";
                else
                    cout << A[n + j - i - 1] << " ";
            }
            cout << endl;
        }
    }
    ~toeplitz_matrix()
    {
        delete[] A;
    }
};

int main()
{
    int d;
    cout << "Enter Dimensions: ";
    cin >> d;

    toeplitz_matrix dm(d);

    int x;
    cout << "Enter All Elements: " << endl;
    ;
    for (int i = 1; i <= d; i++)
    {
        for (int j = 1; j <= d; j++)
        {
            cout << "Element at index [" << i << "," << j << "]: ";
            cin >> x;
            dm.set(i, j, x);
        }
    }

    dm.display();
    return 0;
}

//Storing row 1 first then column 1
//if i<=j, index = j-i
//if i>j, indez = n+i-j-1
