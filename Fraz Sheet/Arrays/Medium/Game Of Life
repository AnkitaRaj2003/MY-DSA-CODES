//Leetcode: https://leetcode.com/problems/game-of-life/

TC: O(M*N)+O(M*N)            SC: O(M*N)
void gameOfLife(vector<vector<int>>& board) {
    vector<vector<int>> count(board.size(), vector<int>(board[0].size(), 0));

    for (int i = 0; i < board.size(); i++) {
        for (int j = 0; j < board[0].size(); j++) {
            for (int k = -1; k < 2; k++) {
                for (int l = -1; l < 2; l++) {
                    if (k == 0 && l == 0)
                        continue;

                    int ni = i + k;
                    int nj = j + l;

                    if (ni >= 0 && ni < board.size() && nj >= 0 && nj < board[0].size()) {
                        count[i][j] += board[ni][nj];
                    }
                }
            }
        }
    }

    for (int i = 0; i < board.size(); i++) {
        for (int j = 0; j < board[0].size(); j++) {
            if (board[i][j] == 0 && count[i][j] == 3)
                board[i][j] = 1;
            else if (board[i][j] == 1) {
                if (count[i][j] < 2 || count[i][j] > 3)
                    board[i][j] = 0;
            }
        }
    }
}


---------------------------------BETTER(in-place)-------------------------------------
TC: O(M*N)+O(M*N)        SC: O(1)
// 0 changes to 1 : -1
// 1 changes to 0 : 2
    void gameOfLife(vector<vector<int>>& board) {
        for(int i=0;i<board.size();i++){
            for(int j=0;j<board[0].size();j++){
                int count=0;
                for(int k=-1;k<2;k++){
                    for(int l=-1;l<2;l++){
                        if(k==0 && l==0) continue;
                        if(i+k>=0 && i+k<board.size() && j+l>=0 && j+l<board[0].size())
                            if(board[i+k][j+l]==1 || board[i+k][j+l]==2) count++;
                    }
                }
                if(board[i][j]==0 && count==3) board[i][j]=-1;
                else if(board[i][j]==1 && (count<2 || count>3)) board[i][j]=2;
            }
        }
        for(int i=0;i<board.size();i++){
            for(int j=0;j<board[0].size();j++){
                if(board[i][j]==-1) board[i][j]=1;
                else if(board[i][j]==2) board[i][j]=0;
            }
        }
    }
