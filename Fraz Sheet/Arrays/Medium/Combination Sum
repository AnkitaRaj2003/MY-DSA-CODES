//Leetcode: https://leetcode.com/problems/combination-sum/

    void f(int n,int sum,vector<vector<int>>&ans,vector<int>v,vector<int>c){
        if(sum==0){
            ans.push_back(v);
            return;
        }
        if(n<0) return;
        if(c[n]<=sum){
            v.push_back(c[n]);
            f(n,sum-c[n],ans,v,c);
            v.pop_back();
        }
        f(n-1,sum,ans,v,c);
    }
    vector<vector<int>> combinationSum(vector<int>& candidates, int target) {
        vector<vector<int>>ans;
        vector<int>temp;
        sort(candidates.begin(),candidates.end());
        candidates.erase(unique(candidates.begin(),candidates.end()),candidates.end());
        f(candidates.size()-1,target,ans,temp,candidates);
        return ans;
    }
