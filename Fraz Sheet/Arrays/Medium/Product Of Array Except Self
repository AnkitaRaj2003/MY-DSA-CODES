//Leetcode: https://leetcode.com/problems/product-of-array-except-self/

TC: O(N)            SC: O(N) - for answer
    vector<int> productExceptSelf(vector<int>& nums) {
        int p=1,c=0,n=nums.size();
        for(int i=0;i<n;i++){
            if(nums[i]==0) c++;
            else p*=nums[i];
        }
        vector<int>ans(n,0);
        if(c<=1){
            for(int i=0;i<n;i++){
                if(c==0) ans[i]=p/nums[i];
                else if(nums[i]==0) ans[i]=p;
            }
        }
        return ans;
    }

--------------------BETTER---------------------
    vector<int> productExceptSelf(vector<int>& nums) {
        vector<int> result(nums.size(), 1);
        vector<int> right(nums.size(), 1);
        for (int i = 1, j = nums.size() - 2; i < nums.size(); i++, j--) {
            result[i] = result[i-1] * nums[i - 1];
            right[j] = right[j+1] * nums[j + 1];
        }
        for (int i = 0; i< nums.size(); i++) {
            result[i] = result[i] * right[i];
        }
        return result;
    }
